name: Node.js CI

# Contrôle du déclenchement de l'exécution du workflow
on:
  # Triggers the workflow on push or pull request events
  push:
    branches:
      [feature/**, develop, release/**, bugfix/**, main, hotfix/**, support/**]
  pull_request:
    types: [opened, synchronize, reopened]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains jobs called "build", "sonarcloud"
  build:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: [18.x, 20.x]
        architecture: [x64]
    name: BuildJS Node ${{ matrix.node-version }} - ${{ matrix.architecture }} on ${{ matrix.os }}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      # Configuration de Node.js avec cache
      - name: Use Node ${{ matrix.node-version }} - ${{ matrix.architecture }} on ${{ matrix.os }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          architecture: ${{ matrix.architecture }}
          cache: "npm"

      # Install dependencies
      - name: Install dependencies Node ${{ matrix.node-version }}
        run: npm install
      # Linter le code (si vous utilisez eslint ou autre)
      - name: LINT code
        run: npm run lint || echo "Linting skipped"  # Optionnel si vous avez un script de lint
      # Installation des dépendances (si nécessaire)
      - name: CI Node ${{ matrix.node-version }}
        run: npm ci
      # Construction du projet si nécessaire
      - name: BUILD Node ${{ matrix.node-version }}
        run: npm run build --if-present
      - name: Set timezone to Europe/Paris (Linux only)
        if: runner.os == 'Linux'
        run: |
          sudo timedatectl set-timezone Europe/Paris
      - name: Set timezone to Europe/Paris (macOS only)
        if: runner.os == 'macos'
        run: |
          sudo systemsetup -settimezone Europe/Paris
      - name: Set timezone to Europe/Paris (Windows only)
        if: runner.os == 'Windows'
        run: |
          tzutil /s "Romance Standard Time"
      # Exécution des tests et génération de la couverture
      - name: TEST Node ${{ matrix.node-version }}
        run: npm test -- --coverage # Exécute les tests et génère la couverture
      # Téléchargement du rapport de couverture avec un nom unique par version de Node.js et OS
      - name: Upload coverage report
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-${{ matrix.node-version }}-${{ matrix.os }}
          path: coverage/lcov.info

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Assurez-vous d'avoir tous les commits pour une analyse complète
      # Télécharger le rapport de couverture
      - name: Download coverage report
        uses: actions/download-artifact@v4
        with:
          name: coverage-report-18.x-ubuntu-latest # Exemple de nom d'artefact, ajustez selon le nom exact
          path: ./coverage # Chemin où le dossier sera extrait
      # Analyse SonarCloud
      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
